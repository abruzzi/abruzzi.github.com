<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: css | I code it]]></title>
  <link href="http://abruzzi.github.com/category/css/atom.xml" rel="self"/>
  <link href="http://abruzzi.github.com/"/>
  <updated>2013-05-30T12:49:26+08:00</updated>
  <id>http://abruzzi.github.com/</id>
  <author>
    <name><![CDATA[Qiu Juntao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CSS中的before和after伪元素及其应用]]></title>
    <link href="http://abruzzi.github.com/2013/05/before-and-after-selector-in-css/"/>
    <updated>2013-05-16T15:29:00+08:00</updated>
    <id>http://abruzzi.github.com/2013/05/before-and-after-selector-in-css</id>
    <content type="html"><![CDATA[<h3>before和after伪元素</h3>

<p>所谓伪元素，可以理解为浏览器为某元素附加的元素（根据名字，附加在这个元素之前/之后）。用来完成特定的效果，before/after需要和content属性一起使用：</p>

<p>```
.css-class:before {</p>

<pre><code>content: " ";
</code></pre>

<p>}
.css-class:after {</p>

<pre><code>content: " ";
</code></pre>

<p>}
```</p>

<p>通过使用before/after伪元素，可以做一些很有意思的效果。<a href="http://css-tricks.com/pseudo-element-roundup/">这里</a>有一些有意思的示例。</p>

<h3>四个三角形</h3>

<p>页面上经常会遇到小三角形这种视觉元素，比如表示一个可以<strong>打开/关闭</strong>的开关（将不会频繁使用的元素隐藏起来，点击可以展开/收起），或者一个模拟消息盒子（纯CSS实现），最早的做法是使用一个小的图片来完成，但是这个事实上可以通过纯CSS来实现。</p>

<p>原理是利用block元素的<code>border</code>属性，当<code>border</code>的值很小的时候，<code>border</code>之间的连接处并无异常，但是当<code>border</code>较大，而元素本身的尺寸小于<code>border</code>自身时，则每一个<code>border</code>都会呈现为梯形，而当元素的<code>width</code>和<code>height</code>都为0时，就会看到一个正方形，而每个边都变成了一个三角形：</p>

<p>```
.container .color-box {</p>

<pre><code>content: " ";
width: 0;
height: 0;
border: 10px solid transparent;
border-left-color: #00ff00;
border-right-color: #000000;
border-top-color: #ff0000;
border-bottom-color: #0000ff;
</code></pre>

<p>}
```</p>

<p><img src="http://abruzzi.github.com/images/2013/05/color-box.png" alt="image" /></p>

<h3>小三角形</h3>

<p>这时候，如果将其他的三条边隐藏起来（通过将<code>border</code>的颜色置为透明）：</p>

<p>```
.container .color-box {</p>

<pre><code>content: " ";
width: 0;
height: 0;
border: 10px solid transparent;//朝下的三角形
border-top-color: #ff0000;
</code></pre>

<p>}
```</p>

<p><img src="http://abruzzi.github.com/images/2013/05/triggle.png" alt="image" /></p>

<p>先将所有的边都设置为透明色，然后根据需要显示某一个边，来完成三角形的指向。</p>

<h3>一个普通的消息框</h3>

<p>一个普通的消息框，通过设置<code>box-shadow</code>和<code>border-radius</code>之后，可以变得比较“好看”，但是如果可以给这个消息框加上一个小的三角形（可以指向用户的头像等）。</p>

<p>HTML代码：</p>

<p>```</p>

<pre><code>    &lt;div class="container"&gt;
        &lt;div class="chat-box"&gt;
            &lt;p&gt;
                Resque (pronounced like "rescue") is a Redis-backed library for creating background jobs, placing those jobs on multiple queues, and processing them later.
            &lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
</code></pre>

<p>```</p>

<p>样式如下：</p>

<p>```
.container .chat-box {</p>

<pre><code>position: relative;
border: 1px solid #6b6b6b;
border-radius: 5px;
box-shadow: 1px 1px 4px #6b6b6b;
width: 300px;
</code></pre>

<p>}</p>

<p>.container .chat-box p {</p>

<pre><code>margin: 0;
padding: 10px;
font-size: 18px;
font-family: "Microsoft Yahei";
</code></pre>

<p>}
```</p>

<p><img src="http://abruzzi.github.com/images/2013/05/box.png" alt="image" /></p>

<h3>更fancy的消息框</h3>

<p>先通过before伪元素，在消息框的底部加上一个小的三角形：</p>

<p><img src="http://abruzzi.github.com/images/2013/05/box-triggle-gray.png" alt="image" /></p>

<p>```
.container .chat-box:after,
.container .chat-box:before {</p>

<pre><code>position: absolute;
content: " ";
width: 0;
height: 0;
border: solid transparent;
top: 100%;
left: 62%;
</code></pre>

<p>}</p>

<p>.container .chat-box:before {</p>

<pre><code>border-width: 10px;
border-top-color: #6b6b6b;
margin-left: -10px;
</code></pre>

<p>}
```</p>

<p><strong>UPDATE:</strong></p>

<hr />

<p>```
.container .chat-box:after {</p>

<pre><code>border-width: 9px;
border-top-color: white;
margin-left: -9px;
</code></pre>

<p>}
```</p>

<hr />

<p>但是一个实心的灰色三角形比较难看，我们需要再改进一下，即通过在这个伪元素之上，再绘制一个白色（与消息框颜色相同）的伪元素，但是尺寸又小一个单位（单位与消息框本身的尺寸相同，这里为<code>1px</code>）。</p>

<p><img src="http://abruzzi.github.com/images/2013/05/box-triggle-both.png" alt="image" /></p>
]]></content>
  </entry>
  
</feed>
