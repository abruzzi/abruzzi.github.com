<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Command line | I code it]]></title>
  <link href="http://abruzzi.github.com/category/command-line/atom.xml" rel="self"/>
  <link href="http://abruzzi.github.com/"/>
  <updated>2014-11-08T18:05:53+11:00</updated>
  <id>http://abruzzi.github.com/</id>
  <author>
    <name><![CDATA[Qiu Juntao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SVN中合并分支]]></title>
    <link href="http://abruzzi.github.com/2014/08/how-to-merge-branches-in-svn/"/>
    <updated>2014-08-25T22:42:00+10:00</updated>
    <id>http://abruzzi.github.com/2014/08/how-to-merge-branches-in-svn</id>
    <content type="html"><![CDATA[<h3>分支策略</h3>

<p>本来准备整理一篇版本管理中，关于分支的维护策略。后来看到阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2012/07/git.html">这篇文章</a>，觉得非常清晰，这里给出一个链接供参考。</p>

<p>另外一个有意思的<a href="http://codicesoftware.blogspot.com/2008/08/4-steps-to-make-version-control-shine.html">链接在这里</a>，也可以一并参看。</p>

<p>本文就仅仅简单的描述一下，使用svn的命令行工具，如何具体完成合并的操作：</p>

<h3>在Svn中合并分支</h3>

<p>在svn中，要合并两个分支（通常是将某个分支b合并到trunk上，不过另一种模式下也可以将trunk合并到b上）非常简单，我们以一个简单的例子来说明其步骤。</p>

<p>比如我们要将trunk上的修改合并到分支b上，操作可以分为4步：</p>

<ol>
<li>切换到分支b上（之前执行过<code>svn co /path/branches/b</code>之后的目录）</li>
<li>使用<code>svn log --stop-on-copy</code>命令得到该分支的最早版本号</li>
<li>使用<code>svn merge --dry-run -rXXX:HEAD /path/trunk</code>来预览合并列表</li>
<li>合并</li>
</ol>


<p>在第二步中，一个典型的输出是这样的：</p>

<p>```sh
$ svn log --stop-on-copy                                                                 <br/>
...</p>

<p>r231625 | juntao | 2014-07-10 13:33:36 +1000 (Thu, 10 Jul 2014) | 1 line</p>

<h2>Juntao Change the version in pom.xml</h2>

<p>r231623 | abruzzi | 2014-07-10 13:22:00 +1000 (Thu, 10 Jul 2014) | 1 line</p>

<h2>Spike on data structure of c-wifi, a workable prototype</h2>

<p>r231610 | juntao | 2014-07-10 12:29:01 +1000 (Thu, 10 Jul 2014) | 1 line</p>

<h2>Create a new branch for c-wifi</h2>

<p>```</p>

<p>一旦有了这个修订号(231610)，就可以开始合并了：</p>

<p><code>sh
$ svn merge --dry-run -r231610:HEAD /path/trunk
</code></p>

<p>这个命令会列出从修订好r231610到当前版本之中，trunk和分支b之间的所有需要合并的文件列表：</p>

<p><code>
--- Merging r235763 through r236311 into 'src/test/java':
U    src/test/java/tcom/checkout/CheckoutServiceTest.java
U    src/test/java/bundles/checkout/accordion/AppointmentTest.java
U    src/test/java/common/service/ServiceHandlerTest.java
...
Summary of conflicts:
  Text conflicts: 2
</code></p>

<p>最后，svn会给出冲突信息（如果有的话），这时，我们来决定是否合并，以及合并哪些修订号区间的修改。如果预览之后觉得可以直接合并，则可以直接运行：</p>

<p><code>sh
$ svn merge -r231610:HEAD /path/trunk
</code></p>

<p>过程中，遇到冲突的情况，svn会询问采取哪种方式来处理</p>

<p>```sh
Select: (p) postpone, (df) diff-full, (e) edit,</p>

<pre><code>    (mc) mine-conflict, (tc) theirs-conflict,
    (s) show all options: p
</code></pre>

<p>```</p>

<p>如果拿不准，可以使用<code>p</code>子命令，然后等到最后在IDE或者编辑器中合并，如果想要丢弃自己的修改，使用<code>tc</code>子命令；如果要丢弃别人的修改，使用<code>mc</code>子命令。</p>

<p>最后，在编辑器中修改完了这些冲突之后，使用:</p>

<p><code>sh
$ svn resolved pom.xml
Resolved conflicted state of 'pom.xml'
</code></p>

<p>来标记该冲突已经被解决。最后，运行测试并提交本次修改：</p>

<p><code>sh
$ mvn clean test
$ svn ci -m "Merge branch b with trunk"
</code></p>
]]></content>
  </entry>
  
</feed>
