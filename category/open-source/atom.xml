<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: open source | I code it]]></title>
  <link href="http://abruzzi.github.com/category/open-source/atom.xml" rel="self"/>
  <link href="http://abruzzi.github.com/"/>
  <updated>2013-01-26T19:30:04+08:00</updated>
  <id>http://abruzzi.github.com/</id>
  <author>
    <name><![CDATA[Qiu Juntao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[将应用程序部署到heroku]]></title>
    <link href="http://abruzzi.github.com/2013/01/developing-with-heroku/"/>
    <updated>2013-01-26T19:02:00+08:00</updated>
    <id>http://abruzzi.github.com/2013/01/developing-with-heroku</id>
    <content type="html"><![CDATA[<h3>heroku</h3>

<p>使用heroku，开发人员可以很容易的将自己的应用程序公开给世界上的其他用户使用，heroku会为你提供一个url，一些预设的空间如数据库（postgresql）等。这对于需要频繁远程showcase的场景提供了非常好的方式，当然对于开发人员向其他的开发人员或者最终用户展现自己的框架的外观/行为等场景也会非常有用。</p>

<h3>在heroku上注册用户</h3>

<p>首先，当然是在heroku上<a href="https://api.heroku.com/signup/devcenter">注册一个开发账户</a>，如果你已经注册过，就请接着第二步</p>

<h3>下载heroku的本地Toolbox</h3>

<p>heroku提供了一个很好用的<a href="https://toolbelt.heroku.com/">工具包</a>，通过这个工具包，开发人员可以很容易的对部署在heroku上的应用程序做操作。</p>

<h3>在本地登陆heroku</h3>

<p>如果没有上传过key的话，heroku会提醒你创建一个新的ssh公钥，然后上传到heroku（这个过程与使用github非常类似）</p>

<p><code>
$ heroku login
Enter your Heroku credentials.
Email: adam@example.com
Password:
Could not find an existing public key.
Would you like to generate one? [Yn]
Generating new SSH public key.
Uploading ssh public key /Users/adam/.ssh/id_rsa.pub
</code></p>

<p>如果已经上传过key，则可以直接登陆</p>

<h3>准备工作</h3>

<p>在本地生成一个应用程序的基本结构，如：<code>Gemfile</code>，目录结构等。然后在本地配置好git环境，比如：</p>

<p><code>
$ git init
$ git add .
$ git commit -m "init"
</code>
准备Procfile：</p>

<p><code>
web: bundle exec ruby app.rb -p $PORT -E production
</code>
<code>app.rb</code>相当于你的应用程序的主入口(main)，<code>-E</code>指定运行环境（此处指定为production），你的应用程序可能会根据次设置来进行一些资源的选择（数据库指向，资源文件位置等）</p>

<p>在上传之前，需要确保自己的应用程序可以在本地正常运行：</p>

<p><code>
foreman start
</code>
应用程序将在本地的5000端口上运行，此时可以做一些简单的验证，保证应用程序运行正常。</p>

<p><code>
$ git add .
$ git commit -m "ready for deploy app to heroku"
</code></p>

<h3>上传你的App</h3>

<p>这时，可以很轻易的将App上传到heroku了：</p>

<p><code>
$ heroku create
$ git push heroku master
</code>
当然，第一次上传可能会比较慢（取决于你应用程序的大小），如果一切正常，heroku将会尝试根据你的Gemfile来安装依赖，安装完成之后，会尝试根据Procfile中的配置启动你的应用程序。</p>

<p>如果你的应用程序会访问数据库（非postgresql的数据库），那么建议在Gemfile中指定当测试时使用该数据库，而在production环境中使用postgresql，因为heroku使用的正是postgresql：</p>

<p>```
configure :test do</p>

<pre><code>DataMapper.setup(:default, ENV['DATABASE_URL'] || "local-db-url")
DataMapper.finalize.auto_upgrade!
</code></pre>

<p>end
```</p>

<p>我的应用在本地使用sqlite，而在heroku中使用其提供的postgresql。</p>
]]></content>
  </entry>
  
</feed>
